{"version":3,"sources":["reportWebVitals.js","components/CounterButton.js","components/Header.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","constants.js","actions.js","api/api.js","containers/App.js","reducers.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CounterButton","updateCount","setState","state","count","nextProps","nextState","this","console","log","className","style","color","props","onClick","Component","Header","Card","id","name","email","alt","src","CardList","robots","map","Error","SearchBox","searchChange","aria-label","type","placeholder","onChange","Scroll","overflowY","border","height","children","ErrorBoundry","hasError","error","CHANGE_SEARCH_FIELD","REQUEST_ROBOTS_PENDING","REQUEST_ROBOTS_SUCCESS","REQUEST_ROBOTS_FAILED","setRequestRobots","dispatch","url","fetch","res","json","data","payload","catch","err","App","onRequestRobots","searchField","onSearchChange","isPending","filteredRobots","filter","robot","toLowerCase","includes","React","connect","searchRobots","requestRobots","event","text","target","value","initialStateSearch","initialStateRobots","logger","createLogger","rootReducer","combineReducers","action","Object","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b89be48c.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from \"react\";\nimport \"./CounterButton.css\";\n\nclass CounterButton extends Component {\n  constructor() {\n    super();\n    this.state = {\n      count: 0,\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.state.count !== nextState.count) {\n      console.log(nextProps, nextState);\n      return true;\n    }\n    return false;\n  }\n\n  updateCount = () => {\n    this.setState((state) => {\n      return { count: state.count + 1 };\n    });\n  };\n\n  render() {\n    return (\n      <button\n        className=\"count-button\"\n        style={{ color: this.props.color }}\n        onClick={this.updateCount}\n      >\n        Count : {this.state.count}\n      </button>\n    );\n  }\n}\n\nexport default CounterButton;\n","import React, { Component } from \"react\";\nimport CounterButton from \"./CounterButton\";\n\n// In most cases, instead of writing shouldComponentUpdate()\n// by hand, you can inherit from React.PureComponent. It is\n// equivalent to implementing shouldComponentUpdate() with a\n// shallow comparison of current and previous props and state.\n\nclass Header extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return false;\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"f1\">RoboFriends</h1>\n        <CounterButton color=\"aqua\" />\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\n\nconst Card = ({ id, name, email }) => {\n  return (\n    <div className=\"tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5\">\n      <img alt=\"robots\" src={`https://robohash.org/${id}?size=200x200`} />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({ robots }) => {\n  if (!robots) {\n    return new Error(\"Nooooooo!\");\n  }\n  return (\n    <div>\n      {robots.map(({ id, name, email }) => (\n        <Card key={id} id={id} name={name} email={email} />\n      ))}\n    </div>\n  );\n};\n\nexport default CardList;\n","const SearchBox = ({ searchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        aria-label=\"Search Robots\" // for accessibility purposes\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"search robots\"\n        onChange={searchChange}\n      />\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\n\nconst Scroll = (props) => {\n  return (\n    <div\n      style={{\n        overflowY: \"scroll\",\n        border: \"1px solid black\",\n        height: \"800px\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React, { Component } from \"react\";\n\nclass ErrorBoundry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  // static getDerivedStateFromError()はエラーがスローされたあとにフォールバックUIをレンター\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  /*\n  /// componentDidCatch()はエラー情報をログに記録するために使用\n  componentDidCatch(error, errorInfo) {\n    logErrorToMyService(error, errorInfo);\n  }\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n  } でも動作する\n  */\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Oooops. That is not good</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundry;\n","export const CHANGE_SEARCH_FIELD = \"CHANGE_SEARCH_FIELD\";\n\nexport const REQUEST_ROBOTS_PENDING = \"REQUEST_ROBOTS_PENDING\";\nexport const REQUEST_ROBOTS_SUCCESS = \"REQUEST_ROBOTS_SUCCESS\";\nexport const REQUEST_ROBOTS_FAILED = \"REQUEST_ROBOTS_FAILED\";\n","import { apiCall } from \"./api/api.js\";\nimport {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED,\n} from \"./constants.js\";\n\nexport const setSearchField = (text) => ({\n  type: CHANGE_SEARCH_FIELD,\n  payload: text,\n});\n\nexport const setRequestRobots = () => (dispatch) => {\n  dispatch({ type: REQUEST_ROBOTS_PENDING });\n  apiCall(\"https://jsonplaceholder.typicode.com/users\")\n    .then((data) => dispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data }))\n    .catch((err) => dispatch({ type: REQUEST_ROBOTS_FAILED, payload: err }));\n};\n","export const apiCall = (url) => fetch(url).then((res) => res.json());\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Header from \"../components/Header\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\";\nimport ErrorBoundry from \"../components/ErrorBoundry\";\nimport \"./App.css\";\n\nimport { setSearchField, setRequestRobots } from \"../actions\";\n\n// state系のpropsをconnectでAppへ渡す\nconst mapStateToProps = (state) => {\n  return {\n    searchField: state.searchRobots.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.requestRobots.isPending,\n    error: state.requestRobots.error,\n  };\n};\n\n// method系のpropsをconnectでAppへ渡す\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n    onRequestRobots: () => dispatch(setRequestRobots()),\n    // setRequestRobots()(dispatch)でも同じ動作をする\n  };\n};\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.onRequestRobots();\n  }\n\n  render() {\n    const { searchField, onSearchChange, robots, isPending } = this.props;\n    const filteredRobots = robots.filter((robot) =>\n      robot.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"tc\">\n        <Header />\n        <SearchBox searchChange={onSearchChange} />\n        <Scroll>\n          {isPending ? (\n            <h1>Loading...</h1>\n          ) : (\n            <ErrorBoundry>\n              <CardList robots={filteredRobots} />\n            </ErrorBoundry>\n          )}\n        </Scroll>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_ROBOTS_PENDING,\n  REQUEST_ROBOTS_SUCCESS,\n  REQUEST_ROBOTS_FAILED,\n} from \"./constants.js\";\n\nconst initialStateSearch = {\n  searchField: \"\",\n};\n\nexport const searchRobots = (state = initialStateSearch, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      // return { ...state, searchField: action.payload }でも可\n      return Object.assign({}, state, { searchField: action.payload });\n    default:\n      return state;\n  }\n};\n\nconst initialStateRobots = {\n  isPending: false,\n  robots: [],\n  error: \"\",\n};\n\nexport const requestRobots = (state = initialStateRobots, action = {}) => {\n  switch (action.type) {\n    case REQUEST_ROBOTS_PENDING:\n      return Object.assign({}, state, { isPending: true });\n    case REQUEST_ROBOTS_SUCCESS:\n      // return { ...state, robots: action.payload, isPending: false } または\n      // return { ...state, ...{robots: action.payload, isPending: false} } でも可\n      return Object.assign({}, state, {\n        robots: action.payload,\n        isPending: false,\n      });\n    case REQUEST_ROBOTS_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: false,\n      });\n    default:\n      return state;\n  }\n};\n","import \"./wdyr\"; // not sure whether it's working\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport { searchRobots, requestRobots } from \"./reducers\";\nimport \"tachyons\";\n\nconst logger = createLogger();\nconst rootReducer = combineReducers({ searchRobots, requestRobots });\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunkMiddleware, logger)\n);\n// applyMiddleware(logger)の代わりに下記のコードに変えるとChrome ExtentionのRedux devtoolsが使える\n//  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}